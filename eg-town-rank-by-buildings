// ==UserScript==
// @name         Evergore Städterangliste nach Gebäudeanzahl
// @version      0.2a
// @description  Sortiert die Städterangliste nicht mehr alphabetisch sondern nach Gebäudeanzahl und bei Gleichstand nach Einwohner
// @author       mofte
// @match        https://evergore.de/*?page=ranking_town
// @icon         https://evergore.de/favicon.ico
// ==/UserScript==

(function() {
    'use strict';

    // Funktion, um das Formular zu entfernen
    function removeForm() {
        const form = document.querySelector('form[action=""]');
        if (form) {
            form.remove();
            console.log('Formular wurde entfernt.');
        }
    }

    // Funktion zum Sortieren der Tabellenzeilen der 3. Tabelle
    function sortTable() {
        const table = document.querySelectorAll('table[align="center"]')[3]; // Wählt die 4. Tabelle aus (index 3)

        if (!table) return;

        // Anpassung der Spaltenbreiten
        const colGroup = table.querySelector('colgroup');
        if (colGroup) {
            colGroup.innerHTML = `
                <col width="9%">
                <col width="47%">
                <col width="18%">
                <col width="18%">
            `;
        }

        const headerRow = table.querySelector('tr'); // Header-Zeile
        const rows = Array.from(table.querySelectorAll('tbody tr:nth-child(n+2)')); // Zeilen ohne Header

        // Entfernen der 5. Spalte im Header (Gesamtpunkte)
        const headerCells = headerRow.querySelectorAll('th');
        if (headerCells.length > 4) {
            headerCells[4].remove(); // Entfernt das "Gesamtpunkte" Header
        }

        // Entfernen der 5. Spalte in jeder Zeile
        rows.forEach(row => {
            if (row.children.length > 4) {
                row.children[4].remove(); // Entfernt die Zelle in der 5. Spalte
            }
        });

        // Sortieren der Zeilen nach der 3. und 4. Spalte
        rows.sort((rowA, rowB) => {
            const valueA3 = parseInt(rowA.cells[2].textContent.trim()) || 0; // Wert der 3. Spalte (Gebäude)
            const valueB3 = parseInt(rowB.cells[2].textContent.trim()) || 0; // Wert der 3. Spalte (Gebäude)
            if (valueA3 !== valueB3) {
                return valueB3 - valueA3; // Sortiere nach der 3. Spalte (Gebäude) absteigend
            }
            const valueA4 = parseInt(rowA.cells[3].textContent.trim()) || 0; // Wert der 4. Spalte (Stadtbewohner)
            const valueB4 = parseInt(rowB.cells[3].textContent.trim()) || 0; // Wert der 4. Spalte (Stadtbewohner)
            return valueB4 - valueA4; // Wenn gleich, sortiere nach der 4. Spalte (Stadtbewohner) absteigend
        });

        // Neue Reihenfolge der Zeilen in die Tabelle einfügen
        rows.forEach(row => table.querySelector('tbody').appendChild(row));

        // Neu zählen der Reihenfolge in der ersten Spalte
        rows.forEach((row, index) => {
            const rankCell = row.cells[0];
            if (rankCell) {
                rankCell.innerHTML = `<b>${index + 1}</b>`; // Zähle die Reihenfolge neu
            }
        });
    }

    // Warten, bis die Seite vollständig geladen ist, bevor das Skript ausgeführt wird
    window.addEventListener('load', () => {
        sortTable();  // Tabelle sortieren
        removeForm(); // Formular entfernen
    });
})();
