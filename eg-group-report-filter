// ==UserScript==
// @name         Evergore Gruppenbericht filtern
// @description  Fügt dem Gruppenbericht einen Button hinzu, um nur Kämpfe anzuzeigen
// @version      0.8
// @author       mofte
// @match        https://evergore.de/lenoran?page=msg_view*
// @icon         https://evergore.de/favicon.ico
// ==/UserScript==

(function () {
    'use strict';

    if (document.body.innerHTML.includes("Kampfereignis beendet.")) {
        const filterButton = createButton("Kampfberichte filtern", () => {
            filterReports();
            createResetButton();
        });

        const deleteButton = document.querySelector('input[value="Löschen"]');
        deleteButton?.parentNode.appendChild(filterButton);
    }

    function createButton(label, onClick) {
        const button = document.createElement("button");
        button.textContent = label;
        button.className = "btn";
        button.style.marginLeft = "10px";
        button.addEventListener("click", onClick);
        return button;
    }

    function createResetButton() {
        // Suche und entferne den "Kampfberichte filtern"-Button
        const filterButton = document.querySelector('button.btn');
        if (filterButton && filterButton.textContent === "Kampfberichte filtern") {
            filterButton.remove();
        }

        const resetButton = createButton("Zurücksetzen", () => location.reload());
        const deleteButtonParent = document.querySelector('input[value="Löschen"]')?.parentNode;
        deleteButtonParent?.appendChild(resetButton);
    }

    function filterReports() {
        const paragraphs = document.querySelectorAll("p");

        paragraphs.forEach(p => {
            if (!p.innerHTML.startsWith("<b>Gruppenmitglieder</b>")) return;

            const lines = p.innerHTML.split("<br>");
            const groupMembers = lines[1]; // Gruppenmitglieder bleiben unverändert
            const filteredLines = lines.filter(line => line.includes('<a href="?page=battle_report'));
            const battleCount = filteredLines.length;

            const formattedLines = filteredLines.map(line => {
                const timestamp = extractTimestamp(p.innerHTML, line);
                return `${timestamp} | ${line}`;
            });

            p.innerHTML = `
                <b>Gruppenmitglieder</b><br>
                ${groupMembers}<br>
                <br><b>${battleCount} Kämpfe</b><br><br>
                ${formattedLines.join("<br><br>")}
            `;
        });
    }

    function extractTimestamp(html, linkMatch) {
        const beforeMatch = html.split(linkMatch)[0].split("<b>").pop()?.trim() || "";
        const beforeParts = beforeMatch.replace(/<br>/g, " | ").split(" | ");
        const beforeTime = beforeParts[0]?.split(" ")[0]?.trim(); // Uhrzeit
        const beforeDay = beforeParts[0]?.match(/\((.*?)\)/)?.[1]?.trim(); // Wochentag
        return beforeDay && beforeTime ? `${beforeDay} | ${beforeTime}` : "Unbekannt";
    }
})();
